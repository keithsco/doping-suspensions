{"version":3,"sources":["components/violation.js","components/grid.js","components/search.js","App.js","index.js"],"names":["Violation","athlete","Grid","violations","length","style","tableLayout","map","a","i","key","Search","setViolations","options","shouldSort","threshold","location","distance","minMatchCharLength","keys","type","onKeyUp","event","query","result","Fuse","search","x","item","parseQuery","target","value","csv","csvtojson","App","useState","setResult","useEffect","fetch","resp","text","bannedAthletes","fromString","json","get","className","overflowX","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAeeA,EAbG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACE,oCACE,4BAAKA,EAAO,MACZ,4BAAKA,EAAO,SACZ,4BAAKA,EAAO,OACZ,4BAAKA,EAAQ,sBACb,4BAAKA,EAAQ,yBACb,4BAAKA,EAAO,YCqBHC,EAzBF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAEd,OAAOA,EAAWC,OAAS,EACtB,2BAAOC,MAAO,CAAEC,YAAa,UAC9B,+BACA,4BACE,oCACA,uCACA,qCACA,iDACA,oDACA,2CAGF,+BACCH,EAAWI,KAAI,SAACC,EAAGC,GAAJ,OACd,wBAAIC,IAAKD,GACP,kBAAC,EAAD,CAAWR,QAASO,UAKxB,gD,OCWSG,EApCA,SAAC,GAAmC,IAAjCR,EAAgC,EAAhCA,WAAYS,EAAoB,EAApBA,cAExBC,EAAU,CACZC,YAAY,EACZC,UAAW,GACXC,SAAU,EACVC,SAAU,IACVC,mBAAoB,EACpBC,KAAM,CACJ,SAiBJ,OACE,oCACE,qDAGA,2BAAOC,KAAK,OAAOC,QAAS,SAAAC,GAAK,OAblB,SAAAC,GAEjB,IACIC,EADO,IAAIC,IAAKtB,EAAYU,GACda,OAAOH,GACzBX,EAAcY,EAAOjB,KAAI,SAAAoB,GAAC,OAAIA,EAAEC,SASOC,CAAWP,EAAMQ,OAAOC,Y,OC5B7DC,E,MAAMC,KA+CGC,MA7Cf,WAAgB,IAAD,EAEqBC,mBAAS,IAF9B,mBAERhC,EAFQ,KAEIS,EAFJ,OAGauB,mBAAS,IAHtB,mBAGRX,EAHQ,KAGAY,EAHA,KAyBb,OApBAC,qBAAU,YAEC,uCAAG,gCAAA7B,EAAA,+EAEW8B,MAAM,wBAFjB,cAEFC,EAFE,gBAGqBA,EAAKC,OAH1B,cAGFC,EAHE,gBAIWT,EAAIU,WAAWD,GAJ1B,OAIFE,EAJE,OAKR/B,EAAc+B,GACdP,EAAUO,GANF,kDAQR/B,EAAc,IACdwB,EAAU,IATF,0DAAH,qDAaTQ,KAEC,IAID,yBAAKC,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CAAQ1C,WAAYA,EAAYS,cAAewB,MAGnD,yBAAKS,UAAU,OACb,yBAAKxC,MAAO,CAAEyC,UAAW,SACvB,yBAAKD,UAAU,UACb,kBAAC,EAAD,CAAM1C,WAAYqB,UCvChCuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.a2bed6db.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Violation = ({ athlete }) => {\n  return (\n    <>\n      <td>{athlete[\"Name\"]}</td>\n      <td>{athlete[\"Country\"]}</td>\n      <td>{athlete[\"Event\"]}</td>\n      <td>{athlete[\"Date of violation\"]}</td>\n      <td>{athlete[\"Banned substance(s)/\"]}</td>\n      <td>{athlete[\"Sanction\"]}</td>\n    </>\n  );\n};\n\nexport default Violation;","import React from \"react\";\n\n\nimport Violation from \"./violation\";\n\n\nconst Grid = ({ violations }) => {\n\n  return violations.length > 0\n    ? (<table style={{ tableLayout: \"fixed\" }}>\n      <thead>\n      <tr>\n        <th>Name</th>\n        <th>Country</th>\n        <th>Event</th>\n        <th>Date of violation</th>\n        <th>Banned substance(s)/</th>\n        <th>Sanctions</th>\n      </tr>\n      </thead>\n      <tbody>\n      {violations.map((a, i) =>\n        <tr key={i}>\n          <Violation athlete={a}/>\n        </tr>\n      )}\n      </tbody>\n    </table>)\n    : <span> Loading ... </span>;\n};\n\nexport default Grid;\n\n","import React from \"react\";\nimport Fuse from \"fuse.js\";\n\nconst Search = ({ violations, setViolations }) => {\n\n  let options = {\n    shouldSort: true,\n    threshold: 0.1,\n    location: 0,\n    distance: 100,\n    minMatchCharLength: 1,\n    keys: [\n      \"Name\"\n      // \"Country\",\n      // \"Event\",\n      // \"Date of violation\",\n      // \"Banned substance(s)/\",\n      // \"Sanctions\"\n    ]\n  };\n\n  const parseQuery = query => {\n\n    let fuse = new Fuse(violations, options); // \"list\" is the item array\n    let result = fuse.search(query);\n    setViolations(result.map(x => x.item));\n  };\n\n\n  return (\n    <>\n      <h1>\n        Search for violations\n      </h1>\n      <input type=\"text\" onKeyUp={event => parseQuery(event.target.value)}/>\n    </>\n  );\n};\n\nexport default Search;","import React, { useEffect, useState } from \"react\";\nimport Grid from \"./components/grid\";\nimport Search from \"./components/search\";\n\nimport csvtojson from \"csvtojson\";\n\nconst csv = csvtojson();\n\nfunction App() {\n\n  let [violations, setViolations] = useState([]);\n  let [result, setResult] = useState([]);\n\n  useEffect(() => {\n\n    const get = async () => {\n      try {\n        const resp = await fetch(\"/banned-athletes.csv\");\n        const bannedAthletes = await resp.text();\n        const json = await csv.fromString(bannedAthletes);\n        setViolations(json);\n        setResult(json);\n      } catch (e) {\n        setViolations([]);\n        setResult([]);\n      }\n    };\n\n    get();\n\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"column\">\n            <Search violations={violations} setViolations={setResult}/>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div style={{ overflowX: \"auto\" }}>\n            <div className=\"column\">\n              <Grid violations={result}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}